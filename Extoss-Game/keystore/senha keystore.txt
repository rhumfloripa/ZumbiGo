
Gerar Keystore

abrir o cmd :

keytool -genkey -v -keystore zumbigo-extoss.keystore -alias extoss-zumbigo-app -keyalg RSA -validity 10000


senha :
thefinalday

incluir esta linha no project.xml

	
<Certificado path= vulgo "zumbigo-extoss.keystore" = "extoss-zumbigo-app" password= "thefinalday" if= "android"> </certificado>	






tutorial : 

Phillip Napieralski
Programador, Engenheiro, pesquisador.
«Construir somethingHow para fazer um fundo do campo de estrela de rolagem com HaxeFlixel»
Publicando seu primeiro jogo android usando HaxeFlixel
Assim, você construiu este jogo incrível em HaxeFlixel e agora você quer publicá-lo no Google Play (ou outro) Store. O que você precisa saber?

Introdução
Há 3 coisas principais que você precisa fazer:

Mudar o nome do pacote de com.example para outra coisa
Obter uma nova chave privada (específico para compilações)
Modificar seu arquivo project.xml para refletir o acima
Vamos cavar e ver como é feito!

Nome do pacote
A primeira é a de alterar o pacote java padrão de com.example.myapp para outra coisa. Se você não fizer isso, você receberá um erro ao tentar enviar para a loja Google Play.

Abra o arquivo project.xml (isto deve estar no diretório raiz do seu projeto) e localizar a seguinte linha:

1
<App title = arquivo "HelloWorld" = "HelloWorld" principal = versão "Main" = "0.0.1" empresa = "HaxeFlixel" />
E alterar o nome do pacote, adicionando o atributo "pacote" para o tag xml. Igual a:

1
<Title app = "HelloWorld" pacote = arquivo "com.AwesomeCompanyName.SuperAppName" = "HelloWorld" principal = versão "Main" = "0.0.1" empresa = "HaxeFlixel" />
Tente fazer isso exclusivo o suficiente para que você não irá interferir com outras pessoas.

Chave privada / certificado
Por padrão, HaxeFlixel vai empacotar e assinar seu aplicativo no modo de depuração. Google Play não gosta disso, então você deve gerar sua própria chave e criar um modo APK release / produção.

Primeiro, vamos gerar uma chave privada. Você pode fazer referência docs android para este aqui. Isto é feito com a ferramenta keytool.exe Java JDK. Vá no diretório bin da instalação do JDK (mina está instalado em C: \ Program Files \ Java \ jdk1.6.0_37 \ bin) e executar essa ferramenta com os seguintes parâmetros:

1
2
keytool -genkey -v -keystore MyReleaseKeyForAwesomeApp.keystore
-alias PickAnAliasName -keyalg RSA -keysize 2048 -validity 10000
Siga as instruções do aplicativo para gerar a chave privada. Este será salvo no diretório em que você executou a ferramenta a partir.

Assinando com sua nova chave privada
Agora que você gerou sua própria chave privada, vamos usá-lo em nosso app!

Volte para o seu arquivo project.xml e adicione a seguinte linha em algum lugar:

1
<Certificado path = vulgo "MyReleaseKeyForAwesomeApp.keystore" = "PickAnAliasName" password = "ThePasswordYouChose" if = "android"> </ certificado>
Agora, certifique-se a chave privada está no mesmo diretório que o seu arquivo project.xml.

Construção fresco
Agora faça o seguinte:

1
cal de construção -clean android
Isto irá fazer uma nova compilação com o seu novo nome do pacote e sua chave privada fresco e novo lançamento!

Imagens necessária
Quando você enviar, você precisará de três imagens - 2 screenshots do seu app / jogo e uma alta logotipo res. Felizmente, Google Play irá avisá-lo sobre isso quando você tenta carregar.

Upload para o Google Play
Agora a cabeça para a área de publicar Google Play, faça o login com sua conta de desenvolvedor e clique no botão grande que diz "Adicionar nova aplicação."

O restante deve ser direta, mas deixe-me saber se você encontrar quaisquer outros senões!

Conclusão
Eu mostrei-lhe o que fazer quando você tem um jogo viável / app em haxeflixel para conseguir que no Google Play Store através do seguinte:

Alterar o nome do pacote padrão de com.example para algo mais significativo
Alterar a chave privada a partir da chave de depuração padrão de sua chave privada própria libertação
Atualizando seu project.xml a usar a nova chave privada (e edifício limpo depois disso!)











